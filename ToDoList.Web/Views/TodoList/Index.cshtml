@model List<TodoList>
@{
    ViewData["Title"] = "Index";
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>
<link href="c:\users\dell\desktop\todolist\todolist.web\views\shared\_layout.cshtml.css" rel="stylesheet" />
<style>

    .task {
        display: flex;
        align-items: center;
        cursor: pointer;
        margin: 5px 0;
    }

    .checkbox {
        width: 20px;
        height: 20px;
        border: 2px solid #000;
        border-radius: 50%;
        margin-right: 10px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 18px;
        color: #fff;
        background-color: #fff;
        transition: background-color 0.2s;
    }

    .completed .checkbox {
        background-color: #4CAF50; /* Yeşil renk */
        border-color: #4CAF50;
    }

    h1 {
        color: white;
        text-align: center;
    }

    th {
        color: white;
    }

    td{
        color:white;
    }

    .btn {
        background-color: #cdcdc1;
        color: white;
    }
    .btn:hover{
            background-color: #8b6969;
            color: #cdcdc1;
    }
</style>
<div class="container">
<h1 style="margin-top:100px;">Todo List</h1>
</div>
<table class="table">
    <thead>
        <div class="container">
        <tr>
            <th></th>
            <th>Durum</th>
            <th>Tarih</th>
            <th>Görev</th>
            <th>İşlem</th>

        </tr>
            @* </div> *@
    </thead>
    <tbody>
       @*  <div class="container">  *@
       @*  @{
            var sortedTasks = Model.OrderBy(x => x.Priority).ToList();
        } *@
        @foreach (var item in Model)
        {
            <tr class="@if (item.IsDone) {
        <text>completed</text>
 }">
                                <td>
                                    <span class="task-status @if (item.IsDone) {
                <text>completed</text>
 }">
             <div class="task container" onclick="toggleTaskStatus(this)">
                            <span class="checkbox task-text">&#10003;</span>
                            <td>@item.Priority</td>
                               <td class="toggleTaskStatus(this)"> @item.TaskDate.ToShortDateString()</td>
                               <td> @item.Title</td>

                        </div>
                                    </span>
                                    </td>
                                <td>
                                    <a asp-controller="TodoList" asp-action="update" asp-route-id="@item.Id" class="btn">
                                        <i class="fas fa-edit"></i> Düzenle
                                    </a>
                                    <a asp-controller="TodoList" asp-action="remove" asp-route-id="@item.Id" class="btn">
                                        <i class="fas fa-trash-alt"></i> Sil
                                    </a>
                                </td>
                            </tr>
        } </div>
        <a asp-controller="TodoList" asp-action="Add" class="btn material-symbols-outlined">
            <i class="material-symbols-outlined"></i> Yeni Görev Ekle
        </a>
    </tbody>
</table>
<script>
    function toggleTaskStatus(element) {
        element.classList.toggle("completed");
        var row = element.closest("tr");
        if (element.classList.contains("completed")) {
            // Eğer görev tamamlanmışsa, bu görevi tablonun en altına taşı
            var table = element.closest("table");
            table.appendChild(row);
            // Butonların rengini geri yükle
            var buttons = row.querySelectorAll("button");
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].classList.remove("completed");
            }
        } else {
            // Eğer görev tamamlanmamışsa, görevi eski yerine taşı
            var parent = row.parentElement;
            parent.insertBefore(row, parent.firstChild);
            // Butonların rengini koru
            var buttons = row.querySelectorAll("button");
            for (var i = 0; i < buttons.length; i++) {
                buttons[i].classList.add("completed");
            }
        }
    }
</script>




